#!groovy

@Library('jenkins-learn@master') _

//func from sharelibrary
def build = new org.devops.build()
def deploy = new org.devops.deploy()
def tools = new org.devops.tools()

//env
String buildType = "${env.buildType}"
String buildShell = "${env.buildShell}"
String deployHosts = "${env.deployHosts}"
String srcUrl = "${env.srcUrl}"
String branchName = "${env.branchName}"

if ("${runOpts}" == "GitlabPush") {
    branchName = branch - "refs/heads/"
    currentBuild.description == "Trigger by ${userName} ${branch}"
}

//pipeline
pipeline{
    agent { node {label "master"}}

    stages {
        stage("checkout") {
            steps{
                script {

                    println("${branchName}")

                    tools.PrintMes("获取代码","green")
                    checkout([$class: 'GitSCM', branches: [[name: "${branchName}"]], doGenerateSubmoduleConfigurations: false, extensions: [], submoduleCfg: [], userRemoteConfigs: [[credentialsId: 'weilai-gitlab', url: "${srcUrl}"]]])
                }
            }
        }
        stage("build") {
            steps{
                script{
                    
                    tools.PrintMes("执行打包","green")
                    build.Build(buildType,buildShell)
                 
                    deploy.AnsibleDeploy("${deployHosts}","-m ping")
                }
            }
        }
        /*stage("maven build") {
            steps{
                script{
                    
                mvnhome = tool "m2"
                sh "${mvnhome}/bin/mvn ${buildshell}"
     
                }
            }
        }
        stage("ant build") {
            steps{
                script{
                    try {    
                        anthome = tool "ANT"
                        sh "${anthome}/bin/ant ${buildshell}"
                    } catch(e) {
                          println(e)
                      }
                }
            }
        }
        stage("gradle build") {
            steps{
                script{
                    
                gradlehome = tool "GRADLE"
                sh "${gradlehome}/bin/gradle ${buildshell}"
     
                }
            }
        }
        stage("npm build") {
            steps{
                script{
                    
                npmhome = tool "NPM"
                sh "export NODE_HOME=${npmhome} && export PATH=\$NODE_HOME/bin:\$PATH && ${npmhome}/bin/npm ${buildshell}"
     
                }
            }
        }*/
    }
}
